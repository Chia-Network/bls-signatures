name:  Build and Test C++, Javascript, and Python

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build_wheels:
    name: Build and Test on ${{ matrix.os }} CPython ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - name: Cancel previous runs on the same branch
      if: ${{ github.ref != 'refs/heads/main' }}
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout code
      uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: ${{ matrix.python }}

    - name: Ubuntu build C++ and test with valgrind
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install valgrind -y
        sudo apt-get install snap -y
        sudo apt-get remove --purge cmake -y
        sudo snap install cmake --classic
        hash -r
        cmake --version
        mkdir -p build
        cd build
        cmake ../
        cmake --build . -- -j 6
        echo "Running ./src/runtest"
        ./src/runtest
        valgrind --leak-check=full --show-leak-kinds=all --errors-for-leak-kinds=all  ./src/runtest

    - name: Mac OS build C++ and test
      if: startsWith(matrix.os, 'macos')
      run: |
        ls -l
        export MACOSX_DEPLOYMENT_TARGET=10.14
        mkdir -p build
        ls -l build
        cd build
        cmake ../
        cmake --build . -- -j 6
        echo "Running ./src/runtest"
        ./src/runtest

    - name: Test pure python implementation
      run: |
        python python-impl/impl-test.py

    - name: Install emsdk
      uses: mymindstorm/setup-emsdk@v9

    - name: Test javascript bindings
      run: |
        emcc -v
        sh emsdk_build.sh
        sh js_test.sh

  drive_ios:
    #Create a construction matrix
    strategy:
      #Set up different configurations for a set of virtual environments
      matrix:
        device:
          - "iPhone 8 (14.4)"
          - "iPhone 11 Pro Max (14.4)"
      #When set to true, GitHub cancels all in progress jobs if any of the matrix jobs fail.
      fail-fast: false
    runs-on: macOS-latest
    steps:
    - name: "List all simulators"
      run: "xcrun instruments -s"
    - name: "Start Simulator"
      run: |
        UDID=$(
          xcrun instruments -s |
          awk \
            -F ' *[][]' \
            -v 'device=${{ matrix.device }}' \
            '$1 == device { print $2 }'
        )
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - name: "Test flutter bindings"
      run: |
        cd flutter-bindings/bls_signatures_ffi/example
        flutter drive --driver=test_driver/integration_test.dart --target=test_driver/main.dart

  drive_android:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 29]
        target: [default]
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - name: "Test flutter bindings"
      #Operation for installing, configuring and running Android emulator (MAC OS only)
      # https://github.com/marketplace/actions/android-emulator-runner
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        script: |
          cd flutter-bindings/bls_signatures_ffi/example
          flutter drive --driver=test_driver/integration_test.dart --target=test_driver/main.dart
